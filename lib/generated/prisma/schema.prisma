// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Consumer {
  id          String                     @id @default(cuid())
  publicKey   String                     @unique
  nonce       String?
  createdAt   DateTime                   @default(now())
  kycRequests consumerProviderRequests[]

  @@index([publicKey])
}

model gasAdmin {
  id               String                     @id @default(cuid())
  publicKey        String                     @unique
  nonce            String?
  createdAt        DateTime                   @default(now())
  companyName      String?
  approvalRequests providerRequest[]
  consumerRequests consumerProviderRequests[]

  @@index([publicKey])
}

model Admin {
  id               String            @id @default(cuid())
  publicKey        String            @unique
  nonce            String?
  createdAt        DateTime          @default(now())
  providerRequests providerRequest[]

  @@index([publicKey])
}

model providerRequest {
  id                String   @id @default(cuid())
  providerPublicKey String
  adminPublicKey    String
  createdAt         DateTime @default(now())
  status            Status
  provider          gasAdmin @relation(fields: [providerPublicKey], references: [publicKey])
  admin             Admin    @relation(fields: [adminPublicKey], references: [publicKey])
}

model consumerProviderRequests {
  id                String   @id @default(cuid())
  consumerPublicKey String
  providerPublicKey String
  createdAt         DateTime @default(now())
  status            Status
  transactionHash   String
  consumer          Consumer @relation(fields: [consumerPublicKey], references: [publicKey])
  provider          gasAdmin @relation(fields: [providerPublicKey], references: [publicKey])
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
